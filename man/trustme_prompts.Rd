% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trustme_prompts.R
\name{trustme_prompts}
\alias{trustme_prompts}
\title{Evaluate data consistency by generating multiple LLM responses for one dataset}
\usage{
trustme_prompts(prompts, model)
}
\arguments{
\item{prompts}{a list of prompts, generally made by subsampling the dataset on which you want to evaluate the consistancy}

\item{model}{A character string of the model name such as "llama3" with which you want to evaluate the prompts.}
}
\value{
a list containing
\itemize{
\item responses: a named list of all responses for all prompts
\item central_answer: an answer meant to be the most representative one across all prompts
\item pca: the result of a PCA computed on the embeddings of all responses
}
}
\description{
Evaluate data consistency by generating multiple LLM responses for one dataset
}
\examples{
\dontrun{




data(waste)
waste <- waste[-14]    # no variability on this question

set.seed(1)
res_mca_waste <- MCA(waste, quali.sup = c(1,2,50:76),
                    ncp = 35, level.ventil = 0.05, graph = FALSE)
plot.MCA(res_mca_waste, choix = "ind",
        invisible = c("var", "quali.sup"), label = "none")
res_hcpc_waste <- HCPC(res_mca_waste, nb.clust = 3, graph = FALSE)
plot.HCPC(res_hcpc_waste, choice = "map", draw.tree = FALSE,
         ind.names = FALSE)
don_clust_waste <- res_hcpc_waste$data.clust

intro_waste <- 'These data were collected
after a survey on food waste,
with participants describing their habits.'
intro_waste <- gsub('\n', ' ', intro_waste) |>
 stringr::str_squish()

req_waste <- 'Please summarize the characteristics of each group.
Then, give each group a new name, based on your conclusions.
Finally, give each group a grade between 0 and 10,
based on how wasteful they are with food:
0 being "not at all", 10 being "absolutely".'
req_waste <- gsub('\n', ' ', req_waste) |>
 stringr::str_squish()

res_waste <- nail_catdes(don_clust_waste,
                        num.var = ncol(don_clust_waste),
                        introduction = intro_waste,
                        request = req_waste,
                        quali.sample = 0.25,
                        quanti.sample = 1,
                        drop.negative = FALSE,
                        generate = FALSE,
                        proba = 0.25)

cat(res_waste)

prompt_list <- list()
num_repeats <- 5

for (i in 1:num_repeats) {
 # Generate the prompt

 prompt <- nail_catdes(don_clust_waste,
                       num.var = ncol(don_clust_waste),
                       introduction = intro_waste,
                       request = req_waste,
                       quali.sample = 0.35,
                       quanti.sample = 1,
                       drop.negative = FALSE,
                       generate = FALSE,
                       proba = 0.25)

 # Store with a unique name
 prompt_list[[paste0("nail_catdes_", i)]] <- prompt
}

res_prompt <- trustme_prompts(prompt_list, model = "llama2")
cat(res_prompt$central_answer)

}









}
